{

  "variables":
  {
    "output_dir": "/opt/output",
    "provisioner": "docker",
    "headless": "true",
    
    "template_name": null,
    "puppet_aio": null,

    "kickstart_file": null,
    "boot_wait": null,
    "disk_size": null,
    "ssh_username": null,
    "ssh_password": null,
    "ssh_port": null,
    "ssh_wait_timeout": null,
    "shutdown_command": null,
    "net_device": null,
    "disk_interface": null,
    "memory_size": null,
    "cpu_count": null,

    "required_modules": null,
    "docker_pull_registry": "localhost:5000/",
    "docker_push_registry": "localhost:5000/",
    "docker_tag": ":latest",
    "docker_image": null

  },

  "builders": [
    {
      "name": "{{user `template_name`}}-{{user `provisioner`}}-vagrant-puppet",
      "type": "docker",
      "commit": true,
      "image": "{{user `docker_pull_registry`}}{{user `docker_image`}}{{user `docker_tag`}}",
      "privileged": true,
      "changes": [
        "LABEL version=0.1",
        "CMD /usr/sbin/init",
        "VOLUME [ '/sys/fs/cgroup' ]",
        "ENV init /lib/systemd/systemd",
        "ONBUILD RUN (cd /lib/systemd/system/sysinit.target.wants/; for i in *; do [ $i == systemd-tmpfiles-setup.service ] || rm -f $i; done); rm -f /lib/systemd/system/multi-user.target.wants/*; rm -f /etc/systemd/system/*.wants/*; rm -f /lib/systemd/system/local-fs.target.wants/*; rm -f /lib/systemd/system/sockets.target.wants/*udev*; rm -f /lib/systemd/system/sockets.target.wants/*initctl*; rm -f /lib/systemd/system/basic.target.wants/*; rm -f /lib/systemd/system/anaconda.target.wants/*; systemctl enable sshd;"

      ]
    }
  ],

  "provisioners": [
    {
      "type": "shell",
      "inline": ["yum -y install sudo openssh-server openssh-clients"]
    },
    {
      "type": "shell",
      "execute_command": "{{.Vars}} sh '{{.Path}}' {{user `required_modules`}}",
      "environment_vars": [
        "TEMPLATE={{user `template_name`}}",
        "PUPPET_AIO={{user `puppet_aio`}}"
      ],
      "scripts": [
        "../../scripts/bootstrap-aio.sh"
      ]
    },

    {
      "type": "puppet-masterless",
      "execute_command": "{{.FacterVars}} PATH=$PATH:/opt/puppetlabs/bin /opt/puppetlabs/puppet/bin/puppet apply --verbose --detailed-exitcodes --modulepath='/tmp/packer-puppet-masterless/manifests/modules' {{.ManifestFile}}",
      "facter": {
        "provisioner": "{{user `provisioner`}}"
      },
      "manifest_dir": "../../manifests",
      "manifest_file": "../../manifests/vagrant/puppet.pp"
    },

    {
      "type": "shell",
      "environment_vars": [
        "TEMPLATE={{user `template_name`}}",
        "PUPPET_AIO={{user `puppet_aio`}}"
      ],
      "scripts": [
        "../../scripts/cleanup-packer.sh",
        "../../scripts/cleanup-scrub.sh"
      ]
    }
  ],
  "post-processors": [
    [ 
      {
        "type": "docker-tag",
        "repository": "{{user `docker_push_registry`}}{{user `template_name`}}-puppet",
        "tag" : "1.0"
      },
      {
        "type": "docker-push"
      }
    ]
  ]

}
